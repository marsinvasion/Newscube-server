{
  "name": "backbone-callbacks",
  "version": "0.1.5",
  "main": "./backbone-callbacks.js",
  "description": "Anonymous callback style interface for Backbone.js async methods",
  "author": {
    "name": "Loren West",
    "email": "open_source@lorenwest.com"
  },
  "homepage": "http://lorenwest.github.com/backbone-callbacks/",
  "dependencies": {
    "underscore": ">=1.4.4 < 1.5.0",
    "backbone": ">=0.9.2 < 0.10.0"
  },
  "devDependencies": {
    "grunt": "~0.3.6"
  },
  "engines": {
    "node": ">0.4.x"
  },
  "scripts": {
    "test": "grunt test"
  },
  "readme": "## Anonymous callback interface for Backbone.js async methods\n\n[Backbone.js](http://documentcloud.github.com/backbone>Backbone.js) exposes a ```success/error``` style callback interface to the asynchronous methods ```fetch```, ```save```, and ```destroy```.  Example:\n\n    myModel.fetch({success: function(model, response) {\n        ...\n      },\n      error: function(model, response) {\n        ...\n      }\n    });\n\nIf you're using Node.js and use your Backbone models on the client as well as the server,\nyou may want to interact with your models in more of a Node.js async callback style:\n\n    myModel.fetch(function(error, response) {\n     ...\n    });\n\nThis library adds to the existing interface for ```fetch```, ```save```, and ```destroy```, allowing you to choose the style you prefer.\n\nIf a callback function is provided as the last argument, it uses that style.  Otherwise it will use the default ```success/error``` style.\n\nTo use this libary:\n\n1) Download from github, or ```npm install backbone-callbacks```\n\n2) Include the library in your application.  Load it after Backbone.js on the browser, or require('backbone-callbacks') in Node.js\n\n",
  "readmeFilename": "README.md",
  "_id": "backbone-callbacks@0.1.5",
  "_from": "backbone-callbacks@>=0.1.4 <0.2.0"
}
